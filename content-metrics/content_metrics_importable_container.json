{
    "exportFormatVersion": 2,
    "exportTime": "2020-11-17 10:30:24",
    "containerVersion": {
        "path": "accounts/3867333303/containers/34273146/versions/0",
        "accountId": "3867333303",
        "containerId": "34273146",
        "containerVersionId": "0",
        "container": {
            "path": "accounts/3867333303/containers/34273146",
            "accountId": "3867333303",
            "containerId": "34273146",
            "name": "Measurelab GTM Training Instructor",
            "publicId": "GTM-PXT9GCS",
            "usageContext": [
                "WEB"
            ],
            "fingerprint": "1604397198403",
            "tagManagerUrl": "https://tagmanager.google.com/#/container/accounts/3867333303/containers/34273146/workspaces?apiLink=container"
        },
        "tag": [
            {
                "accountId": "3867333303",
                "containerId": "34273146",
                "tagId": "56",
                "name": "cHTML - Engagement Time",
                "type": "html",
                "parameter": [
                    {
                        "type": "TEMPLATE",
                        "key": "html",
                        "value": "<script>\n    var timeEngaged = 0;\n    var idleTimer, timeInterval, timeOffset;\n\n//  Utility function for attaching listeners to the window\n\nvar addListener = function(evt, cb) {\n  if (window.addEventListener) {\n    window.addEventListener(evt, cb);\n  } else if (window.attachEvent) {\n    window.attachEvent('on' + evt, cb);\n  }\n};\n\n//  Set the user as idle, and clear the interval recording engaged time\n\n    var setIdle = function() {\n      if (timeInterval) {\n        clearInterval(timeInterval);\n        timeInterval = null;\n      }\n    };\n    \n//  Reset the 5 second idle timer. Start the interval recording engaged time\n\n    var pulse = function(evt) {\n      if (!timeInterval) {\n        timeOffset   = Date.now();\n        timeInterval = setInterval(timeUpdate, 100);\n        window.clearTimeout(idleTimer);\n        idleTimer = window.setTimeout(setIdle, 5000);\n      } \n    };   \n\n// Utility function for updating the engaged time    \n\n    function timeUpdate() {\n      timeEngaged += delta();\n    }\n    \n// Utility function for getting the time difference\n\n    function delta() {\n      var now = Date.now(),\n          d   = now - timeOffset;\n      timeOffset = now;\n      return d;\n    }\n\n// Setting listeners for engagement to fire 'pulse'    \n\naddListener('mousedown', pulse);\naddListener('keydown', pulse);\naddListener('scroll', pulse);\naddListener('mousemove', pulse);\n</script>"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "supportDocumentWrite",
                        "value": "false"
                    }
                ],
                "fingerprint": "1605608492021",
                "firingTriggerId": [
                    "55"
                ],
                "tagFiringOption": "ONCE_PER_EVENT",
                "monitoringMetadata": {
                    "type": "MAP"
                }
            },
            {
                "accountId": "3867333303",
                "containerId": "34273146",
                "tagId": "57",
                "name": "cHTML - beforeunload listener",
                "type": "html",
                "parameter": [
                    {
                        "type": "TEMPLATE",
                        "key": "html",
                        "value": "<script>\n//First, we create the mobileAndTabletCheck function, to see if the user is on a non-desktop device. If this is the case, beforeunload becomes unreliable.\n\nwindow.mobileAndTabletCheck = function() {\n    var check = false;\n    (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0,4))) check = true;})(navigator.userAgent||navigator.vendor||window.opera);\n    return check;\n  };\n\n// If this is the case, we create a variable to return the document visibility\n\n    if(window.mobileAndTabletCheck()){\n  \n// Create a listener for visibilitychange events\n\n  document.addEventListener('visibilitychange', function() {\n  \n// This fires when the user switches tabs, apps, goes to homescreen, etc.\n\n      if (document.visibilityState == 'hidden') {\n          \n// It sends a dataLayer push\n\n          window.dataLayer.push({\n            event: 'vischangehidden'\n        });\n      }\n  });\n// Create a listener for pagehide\n   window.addEventListener('pagehide', function() {\n      window.dataLayer.push({\n        event: 'pagehide'\n      });\n    });\n//create a listener for unload   \n   window.addEventListener('unload', function() {\n      window.dataLayer.push({\n        event: 'unload'\n      });\n    });\n// If the user is on a desktop, use standard beforeunload.\n       } else{\n    window.addEventListener('beforeunload', function() {\n      window.dataLayer.push({\n        event: 'beforeunload'\n      });\n    });\n    }\n</script>"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "supportDocumentWrite",
                        "value": "false"
                    }
                ],
                "fingerprint": "1605608492021",
                "firingTriggerId": [
                    "2147479553"
                ],
                "tagFiringOption": "ONCE_PER_EVENT",
                "monitoringMetadata": {
                    "type": "MAP"
                }
            },
            {
                "accountId": "3867333303",
                "containerId": "34273146",
                "tagId": "59",
                "name": "cHTML - returnToSerp",
                "type": "html",
                "parameter": [
                    {
                        "type": "TEMPLATE",
                        "key": "html",
                        "value": "<script>\n  (function() {\n    var s = document.location.search;\n    var h = document.location.hash;\n    var e = {{Event}};\n    var n = {{New History Fragment}};\n    var o = {{Old History Fragment}};\n    \n    // Only run if the History API is supported\n    if (window.history) {\n\n      // Create a new history state if the user lands from Google's SERP\n      if (e === 'gtm.js' && \n          document.referrer.indexOf('www.google.') > -1 && \n          s.indexOf('gclid') === -1 &&\n          s.indexOf('utm_') === -1 &&\n          h !== '#gref') {\n        window.oldFragment = false;\n        window.history.pushState(null,null,'#gref');\n      } else if (e === 'gtm.js') {\n        window.oldFragment = true;\n      }\n\n      // When the user tries to return to the SERP using browser back, fire the\n      // Google Analytics timing event, and after it's dispatched, manually\n      // navigate to the previous history entry, i.e. the SERP\n      if (e === 'gtm.historyChange' && \n          n === '' && \n          o === 'gref') {\n        var time = new Date().getTime() - {{DLV - gtm.start}};\n        if (!window.oldFragment) {\n          dataLayer.push({\n            'event' : 'returnToSerp',\n            'timeToSerp' : time,\n            'eventCallback' : function() {\n              window.history.go(-1);\n            }\n          });\n        } else {\n          window.history.go(-1);\n        }\n      }\n    }\n  })();\n</script>"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "supportDocumentWrite",
                        "value": "false"
                    }
                ],
                "fingerprint": "1605608492022",
                "firingTriggerId": [
                    "2147479553",
                    "54"
                ],
                "tagFiringOption": "ONCE_PER_EVENT",
                "monitoringMetadata": {
                    "type": "MAP"
                }
            },
            {
                "accountId": "3867333303",
                "containerId": "34273146",
                "tagId": "63",
                "name": "GA - Timing - SERP bounce",
                "type": "ua",
                "parameter": [
                    {
                        "type": "BOOLEAN",
                        "key": "overrideGaSettings",
                        "value": "true"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "doubleClick",
                        "value": "true"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "useDebugVersion",
                        "value": "false"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "trackType",
                        "value": "TRACK_TIMING"
                    },
                    {
                        "type": "LIST",
                        "key": "metric",
                        "list": [
                            {
                                "type": "MAP",
                                "map": [
                                    {
                                        "type": "TEMPLATE",
                                        "key": "index",
                                        "value": "3"
                                    },
                                    {
                                        "type": "TEMPLATE",
                                        "key": "metric",
                                        "value": "1"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "enableLinkId",
                        "value": "false"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "timingCategory",
                        "value": "SERP Bounce"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "timingVar",
                        "value": "{{Page URL}}"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "timingValue",
                        "value": "{{DLV - timeToSerp}}"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "trackingId",
                        "value": "UA-1234567-1"
                    }
                ],
                "fingerprint": "1605608544577",
                "firingTriggerId": [
                    "62"
                ],
                "monitoringMetadata": {
                    "type": "MAP"
                }
            },
            {
                "accountId": "3867333303",
                "containerId": "34273146",
                "tagId": "65",
                "name": "cHTML - Navigation Behaviour",
                "type": "html",
                "parameter": [
                    {
                        "type": "TEMPLATE",
                        "key": "html",
                        "value": "<script>\n  (function() {\n    \n    // Set to false if you only want to register \"BACK/FORWARD\"\n    // if either button was pressed.\n    var detailedBackForward = true;\n    \n    // Set expiration of tab count in milliseconds. The recommended default is\n    // 72 hours (259200000 ms). Set to 0 if you don't want to expire the tab count.\n    var expireTabs = 259200000;\n    \n    if (!!window.Storage) {\n\n      var openTabs  = JSON.parse(localStorage.getItem('_tab_ids')) || [],\n          tabId     = sessionStorage.getItem('_tab_id'),\n          navPath   = JSON.parse(sessionStorage.getItem('_nav_path')),\n          curPage   = document.location.href,\n          newTab    = false,\n          origin\t= document.location.origin;\n\n      var tabCount,\n          redirectCount,\n          navigationType,\n          prevInStack,\n          lastInStack,\n          payload,\n          expiration,\n          newTabId;\n\n      var clearExpired = function(tabs) {\n        \n        if (expireTabs === 0) { return tabs; }\n        return tabs.filter(function(tab) {\n          try {\n\t        expiration = parseInt(tab.split('_')[1], 10);\n    \t    return expiration > (new Date().getTime());\n          } catch(e) {\n            return false;\n          }\n        });\n        \n      };\n      \n      var updateTabExpiration = function(tabId) {\n        \n        if (expireTabs === 0) { return tabId; }\n        try {\n          newTabId = tabId.split('_');\n          expiration = parseInt(newTabId[1], 10);\n          if (expiration > new Date().getTime()) {\n            return tabId;\n          } else {\n            newTabId = newTabId[0] + '_' + (new Date().getTime() + expireTabs);\n            sessionStorage.setItem('_tab_id', newTabId);\n            return newTabId;\n          }\n        } catch(e) {\n          return tabId;\n        }\n      \n      };\n      \n      var getBackForwardNavigation = function() {\n        \n        if (detailedBackForward === false) {\n          return 'BACK/FORWARD';\n        }\n\n        if (navPath.length < 2) {\n          return 'FORWARD';\n        }\n\n        prevInStack = navPath[navPath.length-2];\n        lastInStack = navPath[navPath.length-1];\n\n        if (prevInStack === curPage || lastInStack === curPage) {\n          return 'BACK';\n        } else {\n          return 'FORWARD';\n        }\n\n      };\n\n      var removeTabOnUnload = function() {\n\n        var index;\n\n        // Get the most recent values from storage\n        openTabs = JSON.parse(localStorage.getItem('_tab_ids')) || [];\n        tabId    = sessionStorage.getItem('_tab_id');\n\n        openTabs = clearExpired(openTabs);\n        \n        if (openTabs.length && tabId !== null) {\n          index = openTabs.indexOf(tabId);\n          if (index > -1) {\n            openTabs.splice(index, 1);\n          }\n          localStorage.setItem('_tab_ids', JSON.stringify(openTabs));\n        }\n\n      };\n\n      var generateTabId = function() {\n\n        // From https://stackoverflow.com/a/8809472/2367037\n        var d = new Date().getTime();\n        if (typeof performance !== 'undefined' && typeof performance.now === 'function'){\n          d += performance.now(); //use high-precision timer if available\n        }\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n          var r = (d + Math.random() * 16) % 16 | 0;\n          d = Math.floor(d / 16);\n          return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n        }) + (expireTabs > 0 ? '_' + (new Date().getTime() + expireTabs) : '');\n\n      };\n      \n      var validNavigation = function(type, newTab) {\n        \n        // Return false if new tab and any other navigation type than\n        // NAVIGATE or OTHER. Otherwise return true.\n        return !(newTab === true && (type !== 0 && type !== 255));\n      \n      };\n\n      if (tabId === null) {\n        tabId = generateTabId();\n        newTab = true;\n        sessionStorage.setItem('_tab_id', tabId);\n      } else {\n        tabId = updateTabExpiration(tabId);\n      }   \n          \n      openTabs = clearExpired(openTabs); \n\n      if (openTabs.indexOf(tabId) === -1) {\n        openTabs.push(tabId);\n        localStorage.setItem('_tab_ids', JSON.stringify(openTabs));\n      }\n\n      tabCount = openTabs.length;\n\n      if (!!window.PerformanceNavigation) {\n        navPath = navPath || [];\n        redirectCount = window.performance.navigation.redirectCount;\n        // Only track new tabs if type is NAVIGATE or OTHER\n        if (validNavigation(window.performance.navigation.type, newTab)) {\n          switch (window.performance.navigation.type) {\n            case 0:\n              navigationType = 'NAVIGATE';\n              navPath.push(curPage);\n              break;\n            case 1:\n              navigationType = 'RELOAD';\n              if (navPath.length === 0 || navPath[navPath.length-1] !== curPage) {\n                navPath.push(curPage);\n              }\n              break;\n            case 2:\n              navigationType = getBackForwardNavigation();\n              if (navigationType === 'FORWARD') {\n                // Only add to navigation if not coming from external domain\n                if (document.referrer.indexOf(origin) > -1) {\n                  navPath.push(curPage);\n                }\n              } else if (navigationType === 'BACK') {\n                // Only clear from navigation if not returning from external domain\n                if (lastInStack !== curPage) {\n                  navPath.pop();\n                }\n              } else {\n                navPath.push(curPage);\n              }\n              break;\n            default:\n              navigationType = 'OTHER';\n              navPath.push(curPage);\n          }\n        } else {\n          navPath.push(curPage);\n        }\n        sessionStorage.setItem('_nav_path', JSON.stringify(navPath));\n      }\n\n      window.addEventListener('beforeunload', removeTabOnUnload);\n      \n      payload = {\n        tabCount: tabCount,\n        redirectCount: redirectCount,\n        navigationType: navigationType,\n        newTab: newTab === true ? 'New' : 'Existing',\n        tabId: tabId.replace(/_.+/, '')\n      };\n\n      // Set the data model keys directly so they can be used in the Page View tag\n      window.google_tag_manager[{{Container ID}}].dataLayer.set('browsingBehavior', payload);\n      \n      // Also push to dataLayer\n      window.dataLayer.push({\n        event: 'custom.navigation',\n        browsingBehavior: payload\n      });\n    \n    }\n  \n  })();\n</script>"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "supportDocumentWrite",
                        "value": "false"
                    }
                ],
                "fingerprint": "1605608492022",
                "tagFiringOption": "ONCE_PER_EVENT",
                "monitoringMetadata": {
                    "type": "MAP"
                }
            },
            {
                "accountId": "3867333303",
                "containerId": "34273146",
                "tagId": "69",
                "name": "cHTML - Depth Tracking",
                "type": "html",
                "parameter": [
                    {
                        "type": "TEMPLATE",
                        "key": "html",
                        "value": "<script>\n  var winheight, docheight, trackLength, throttlescroll\n  window.depthTrack = 0;\n \n  function getDocHeight() {\n    var D = document;\n    return Math.max(\n        D.body.scrollHeight, D.documentElement.scrollHeight,\n        D.body.offsetHeight, D.documentElement.offsetHeight,\n        D.body.clientHeight, D.documentElement.clientHeight\n    )\n}\n  \nfunction getmeasurements(){\n    winheight= window.innerHeight || (document.documentElement || document.body).clientHeight\n    docheight = getDocHeight()\n    trackLength = docheight - winheight\n}\n \nfunction amountscrolled(){\n    var scrollTop = window.pageYOffset || (document.documentElement || document.body.parentNode || document.body).scrollTop\n    var pctScrolled = Math.floor(scrollTop/trackLength * 100) // gets percentage scrolled (ie: 80 or NaN if tracklength == 0)\n    //console.log(pctScrolled + '% scrolled')\n    if(pctScrolled > window.depthTrack){\n    window.depthTrack = pctScrolled\n    } \n}\n \ngetmeasurements()\n \nwindow.addEventListener(\"resize\", function(){\n    getmeasurements()\n}, false)\n \nwindow.addEventListener(\"scroll\", function(){\n    clearTimeout(throttlescroll)\n        throttlescroll = setTimeout(function(){ // throttle code inside scroll to once every 50 milliseconds\n        amountscrolled()\n    }, 50)\n}, false)\n</script>"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "supportDocumentWrite",
                        "value": "false"
                    }
                ],
                "fingerprint": "1605608492023",
                "firingTriggerId": [
                    "68"
                ],
                "tagFiringOption": "ONCE_PER_EVENT",
                "monitoringMetadata": {
                    "type": "MAP"
                }
            },
            {
                "accountId": "3867333303",
                "containerId": "34273146",
                "tagId": "72",
                "name": "GA - Event - Scroll Depth V2",
                "type": "ua",
                "parameter": [
                    {
                        "type": "BOOLEAN",
                        "key": "nonInteraction",
                        "value": "true"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "overrideGaSettings",
                        "value": "true"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "doubleClick",
                        "value": "true"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "useDebugVersion",
                        "value": "false"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "eventCategory",
                        "value": "Scroll Depth (maximum depth)"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "trackType",
                        "value": "TRACK_EVENT"
                    },
                    {
                        "type": "LIST",
                        "key": "metric",
                        "list": [
                            {
                                "type": "MAP",
                                "map": [
                                    {
                                        "type": "TEMPLATE",
                                        "key": "index",
                                        "value": "1"
                                    },
                                    {
                                        "type": "TEMPLATE",
                                        "key": "metric",
                                        "value": "{{JS - depthTrack}}"
                                    }
                                ]
                            },
                            {
                                "type": "MAP",
                                "map": [
                                    {
                                        "type": "TEMPLATE",
                                        "key": "index",
                                        "value": "2"
                                    },
                                    {
                                        "type": "TEMPLATE",
                                        "key": "metric",
                                        "value": "{{Custom JS - get engagement time in seconds}}"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "enableLinkId",
                        "value": "false"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "eventAction",
                        "value": "{{Page Path}}"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "eventLabel",
                        "value": "{{JS - depthTrack}}%"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "enableEcommerce",
                        "value": "false"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "trackingId",
                        "value": "UA-1234567-1"
                    }
                ],
                "fingerprint": "1605608531779",
                "firingTriggerId": [
                    "71"
                ],
                "tagFiringOption": "ONCE_PER_LOAD",
                "monitoringMetadata": {
                    "type": "MAP"
                }
            },
            {
                "accountId": "3867333303",
                "containerId": "34273146",
                "tagId": "78",
                "name": "GA - Pageview",
                "type": "ua",
                "parameter": [
                    {
                        "type": "BOOLEAN",
                        "key": "overrideGaSettings",
                        "value": "true"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "trackType",
                        "value": "TRACK_PAGEVIEW"
                    },
                    {
                        "type": "LIST",
                        "key": "dimension",
                        "list": [
                            {
                                "type": "MAP",
                                "map": [
                                    {
                                        "type": "TEMPLATE",
                                        "key": "index",
                                        "value": "1"
                                    },
                                    {
                                        "type": "TEMPLATE",
                                        "key": "dimension",
                                        "value": "{{dataLayer - browsingBehavior.redirectCount}}"
                                    }
                                ]
                            },
                            {
                                "type": "MAP",
                                "map": [
                                    {
                                        "type": "TEMPLATE",
                                        "key": "index",
                                        "value": "2"
                                    },
                                    {
                                        "type": "TEMPLATE",
                                        "key": "dimension",
                                        "value": "{{dataLayer - browsingBehavior.navigationType}}"
                                    }
                                ]
                            },
                            {
                                "type": "MAP",
                                "map": [
                                    {
                                        "type": "TEMPLATE",
                                        "key": "index",
                                        "value": "3"
                                    },
                                    {
                                        "type": "TEMPLATE",
                                        "key": "dimension",
                                        "value": "{{dataLayer - browsingBehavior.newTab}}"
                                    }
                                ]
                            },
                            {
                                "type": "MAP",
                                "map": [
                                    {
                                        "type": "TEMPLATE",
                                        "key": "index",
                                        "value": "4"
                                    },
                                    {
                                        "type": "TEMPLATE",
                                        "key": "dimension",
                                        "value": "{{dataLayer - browsingBehavior.tabCount}}"
                                    }
                                ]
                            },
                            {
                                "type": "MAP",
                                "map": [
                                    {
                                        "type": "TEMPLATE",
                                        "key": "index",
                                        "value": "5"
                                    },
                                    {
                                        "type": "TEMPLATE",
                                        "key": "dimension",
                                        "value": "{{dataLayer - browsingBehavior.tabId}}"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "trackingId",
                        "value": "UA-1234567-1"
                    }
                ],
                "fingerprint": "1605609015532",
                "firingTriggerId": [
                    "2147479553"
                ],
                "setupTag": [
                    {
                        "tagName": "cHTML - Navigation Behaviour"
                    }
                ],
                "tagFiringOption": "ONCE_PER_EVENT",
                "monitoringMetadata": {
                    "type": "MAP"
                }
            }
        ],
        "trigger": [
            {
                "accountId": "3867333303",
                "containerId": "34273146",
                "triggerId": "54",
                "name": "Event - history change with gref",
                "type": "HISTORY_CHANGE",
                "filter": [
                    {
                        "type": "MATCH_REGEX",
                        "parameter": [
                            {
                                "type": "TEMPLATE",
                                "key": "arg0",
                                "value": "{{New History Fragment}}"
                            },
                            {
                                "type": "TEMPLATE",
                                "key": "arg1",
                                "value": "^$"
                            }
                        ]
                    },
                    {
                        "type": "EQUALS",
                        "parameter": [
                            {
                                "type": "TEMPLATE",
                                "key": "arg0",
                                "value": "{{History Source}}"
                            },
                            {
                                "type": "TEMPLATE",
                                "key": "arg1",
                                "value": "popstate"
                            }
                        ]
                    }
                ],
                "fingerprint": "1605608492014"
            },
            {
                "accountId": "3867333303",
                "containerId": "34273146",
                "triggerId": "55",
                "name": "DOM Ready - All Pages",
                "type": "DOM_READY",
                "fingerprint": "1605608492015"
            },
            {
                "accountId": "3867333303",
                "containerId": "34273146",
                "triggerId": "62",
                "name": "event - returnToSerp",
                "type": "CUSTOM_EVENT",
                "customEventFilter": [
                    {
                        "type": "EQUALS",
                        "parameter": [
                            {
                                "type": "TEMPLATE",
                                "key": "arg0",
                                "value": "{{_event}}"
                            },
                            {
                                "type": "TEMPLATE",
                                "key": "arg1",
                                "value": "returnToSerp"
                            }
                        ]
                    }
                ],
                "filter": [
                    {
                        "type": "LESS",
                        "parameter": [
                            {
                                "type": "TEMPLATE",
                                "key": "arg0",
                                "value": "{{DLV - timeToSerp}}"
                            },
                            {
                                "type": "TEMPLATE",
                                "key": "arg1",
                                "value": "1800000"
                            }
                        ]
                    }
                ],
                "fingerprint": "1605608492017"
            },
            {
                "accountId": "3867333303",
                "containerId": "34273146",
                "triggerId": "68",
                "name": "Window loaded",
                "type": "WINDOW_LOADED",
                "fingerprint": "1605608492019"
            },
            {
                "accountId": "3867333303",
                "containerId": "34273146",
                "triggerId": "71",
                "name": "Custom Event - Unload events",
                "type": "CUSTOM_EVENT",
                "customEventFilter": [
                    {
                        "type": "MATCH_REGEX",
                        "parameter": [
                            {
                                "type": "TEMPLATE",
                                "key": "arg0",
                                "value": "{{_event}}"
                            },
                            {
                                "type": "TEMPLATE",
                                "key": "arg1",
                                "value": "unload|beforeunload|vischangehidden|pagehide"
                            }
                        ]
                    }
                ],
                "fingerprint": "1605608492020"
            }
        ],
        "variable": [
            {
                "accountId": "3867333303",
                "containerId": "34273146",
                "variableId": "58",
                "name": "DLV - gtm.start",
                "type": "v",
                "parameter": [
                    {
                        "type": "INTEGER",
                        "key": "dataLayerVersion",
                        "value": "2"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "setDefaultValue",
                        "value": "false"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "name",
                        "value": "gtm.start"
                    }
                ],
                "fingerprint": "1605608492016",
                "formatValue": {}
            },
            {
                "accountId": "3867333303",
                "containerId": "34273146",
                "variableId": "60",
                "name": "DLV - timeToSerp",
                "type": "v",
                "parameter": [
                    {
                        "type": "INTEGER",
                        "key": "dataLayerVersion",
                        "value": "2"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "setDefaultValue",
                        "value": "false"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "name",
                        "value": "timeToSerp"
                    }
                ],
                "fingerprint": "1605608492016",
                "formatValue": {}
            },
            {
                "accountId": "3867333303",
                "containerId": "34273146",
                "variableId": "64",
                "name": "Container ID",
                "type": "c",
                "parameter": [
                    {
                        "type": "TEMPLATE",
                        "key": "value",
                        "value": "GTM-WDXT"
                    }
                ],
                "fingerprint": "1605608492018",
                "formatValue": {}
            },
            {
                "accountId": "3867333303",
                "containerId": "34273146",
                "variableId": "66",
                "name": "JS - timeEngaged",
                "type": "j",
                "parameter": [
                    {
                        "type": "TEMPLATE",
                        "key": "name",
                        "value": "timeEngaged"
                    }
                ],
                "fingerprint": "1605608492018",
                "formatValue": {}
            },
            {
                "accountId": "3867333303",
                "containerId": "34273146",
                "variableId": "67",
                "name": "Custom JS - get engagement time in seconds",
                "type": "jsm",
                "parameter": [
                    {
                        "type": "TEMPLATE",
                        "key": "javascript",
                        "value": "function() {\n  return ({{JS - timeEngaged}} / 1000 ) || 0;\n}"
                    }
                ],
                "fingerprint": "1605608492023",
                "formatValue": {}
            },
            {
                "accountId": "3867333303",
                "containerId": "34273146",
                "variableId": "70",
                "name": "JS - depthTrack",
                "type": "j",
                "parameter": [
                    {
                        "type": "TEMPLATE",
                        "key": "name",
                        "value": "depthTrack"
                    }
                ],
                "fingerprint": "1605608492019",
                "formatValue": {}
            },
            {
                "accountId": "3867333303",
                "containerId": "34273146",
                "variableId": "73",
                "name": "dataLayer - browsingBehavior.redirectCount",
                "type": "v",
                "parameter": [
                    {
                        "type": "INTEGER",
                        "key": "dataLayerVersion",
                        "value": "2"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "setDefaultValue",
                        "value": "false"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "name",
                        "value": "browsingBehavior.redirectCount"
                    }
                ],
                "fingerprint": "1605608791275",
                "formatValue": {}
            },
            {
                "accountId": "3867333303",
                "containerId": "34273146",
                "variableId": "74",
                "name": "dataLayer - browsingBehavior.navigationType",
                "type": "v",
                "parameter": [
                    {
                        "type": "INTEGER",
                        "key": "dataLayerVersion",
                        "value": "2"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "setDefaultValue",
                        "value": "false"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "name",
                        "value": "browsingBehavior.navigationType"
                    }
                ],
                "fingerprint": "1605608930492",
                "formatValue": {}
            },
            {
                "accountId": "3867333303",
                "containerId": "34273146",
                "variableId": "75",
                "name": "dataLayer - browsingBehavior.newTab",
                "type": "v",
                "parameter": [
                    {
                        "type": "INTEGER",
                        "key": "dataLayerVersion",
                        "value": "2"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "setDefaultValue",
                        "value": "false"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "name",
                        "value": "browsingBehavior.newTab"
                    }
                ],
                "fingerprint": "1605608950528",
                "formatValue": {}
            },
            {
                "accountId": "3867333303",
                "containerId": "34273146",
                "variableId": "76",
                "name": "dataLayer - browsingBehavior.tabCount",
                "type": "v",
                "parameter": [
                    {
                        "type": "INTEGER",
                        "key": "dataLayerVersion",
                        "value": "2"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "setDefaultValue",
                        "value": "false"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "name",
                        "value": "browsingBehavior.tabCount"
                    }
                ],
                "fingerprint": "1605608972509",
                "formatValue": {}
            },
            {
                "accountId": "3867333303",
                "containerId": "34273146",
                "variableId": "77",
                "name": "dataLayer - browsingBehavior.tabId",
                "type": "v",
                "parameter": [
                    {
                        "type": "INTEGER",
                        "key": "dataLayerVersion",
                        "value": "2"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "setDefaultValue",
                        "value": "false"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "name",
                        "value": "browsingBehavior.tabId"
                    }
                ],
                "fingerprint": "1605608991991",
                "formatValue": {}
            }
        ],
        "builtInVariable": [
            {
                "accountId": "3867333303",
                "containerId": "34273146",
                "type": "PAGE_URL",
                "name": "Page URL"
            },
            {
                "accountId": "3867333303",
                "containerId": "34273146",
                "type": "PAGE_HOSTNAME",
                "name": "Page Hostname"
            },
            {
                "accountId": "3867333303",
                "containerId": "34273146",
                "type": "PAGE_PATH",
                "name": "Page Path"
            },
            {
                "accountId": "3867333303",
                "containerId": "34273146",
                "type": "REFERRER",
                "name": "Referrer"
            },
            {
                "accountId": "3867333303",
                "containerId": "34273146",
                "type": "EVENT",
                "name": "Event"
            },
            {
                "accountId": "3867333303",
                "containerId": "34273146",
                "type": "NEW_HISTORY_FRAGMENT",
                "name": "New History Fragment"
            },
            {
                "accountId": "3867333303",
                "containerId": "34273146",
                "type": "OLD_HISTORY_FRAGMENT",
                "name": "Old History Fragment"
            },
            {
                "accountId": "3867333303",
                "containerId": "34273146",
                "type": "HISTORY_SOURCE",
                "name": "History Source"
            }
        ],
        "fingerprint": "1605609024536",
        "tagManagerUrl": "https://tagmanager.google.com/#/versions/accounts/3867333303/containers/34273146/versions/0?apiLink=version"
    }
}